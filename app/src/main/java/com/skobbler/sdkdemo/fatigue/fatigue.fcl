/*
There is the fatigue.fcl file which include fuzzy logic for the fatigue computation algorithm
*/

FUNCTION_BLOCK fatigue	// Block definition - block_function name fatigue

VAR_INPUT				// Define 2 input variables: localTime for the started timeZone and executionTime
	execution : REAL;
	local : REAL;
END_VAR

VAR_OUTPUT				// Define output variable - driver's fatigue at the moment
	fatigue : REAL;
END_VAR

FUZZIFY execution			// Fuzzify input variable 'execution': {'short', 'mid' , 'long'}, every term is continuous
	TERM short := (0, 1) (4, 0) ;
	TERM mid := (1, 0) (4,1) (6,1) (9,0);
	TERM long := (6, 0) (9, 1);
END_FUZZIFY

FUZZIFY local			// Fuzzify input variable 'local': { 'morning', 'midday', 'afternoon', 'evening', 'midnight', 'night' }, every term is continuous
	TERM morning := (0, 1) (1, 1) (3,0) ;
	TERM midday := (7,0) (9,1);
	TERM afternoon := (7,0) (9,1);
	TERM evening := (7,0) (9,1);
	TERM midnight := (7,0) (9,1);
	TERM night := (7,0) (9,1);
END_FUZZIFY

DEFUZZIFY fatigue			// Defzzzify output variable 'fatigue' : {'small', 'big' }, term are continuous
	TERM small := (0,0) (5,1) (10,0);
	TERM big := (10,0) (15,1) (20,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF service IS poor OR food IS rancid THEN tip IS cheap;
	RULE 2 : IF service IS good THEN tip IS average;
	RULE 3 : IF service IS excellent AND food IS delicious THEN tip IS generous;
END_RULEBLOCK

END_FUNCTION_BLOCK

